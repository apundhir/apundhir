name: Update blog posts
on:
  schedule:
    - cron: "0 */12 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-readme-with-blog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Update README with blog posts
        run: |
          cat > update_blog.js << 'EOF'
          const https = require('https');
          const fs = require('fs');
          
          function fetchRSSAndUpdateReadme() {
              return new Promise((resolve, reject) => {
                  const url = 'https://aiexponent.com/feed/';
                  
                  console.log('Fetching RSS feed...');
                  
                  https.get(url, (res) => {
                      let data = '';
                      
                      res.on('data', (chunk) => {
                          data += chunk;
                      });
                      
                      res.on('end', () => {
                          try {
                              console.log('RSS feed fetched successfully');
                              
                              // Extract items using regex
                              const itemMatches = data.match(/<item>[\s\S]*?<\/item>/g);
                              
                              if (!itemMatches) {
                                  console.log('No items found in RSS feed');
                                  resolve(false);
                                  return;
                              }
                              
                              console.log(`Found ${itemMatches.length} blog posts`);
                              
                              const posts = [];
                              
                              for (let i = 0; i < Math.min(5, itemMatches.length); i++) {
                                  const item = itemMatches[i];
                                  
                                  const titleMatch = item.match(/<title><!\[CDATA\[(.*?)\]\]><\/title>/) || 
                                                   item.match(/<title>(.*?)<\/title>/);
                                  const linkMatch = item.match(/<link>(.*?)<\/link>/);
                                  
                                  if (titleMatch && linkMatch) {
                                      let title = titleMatch[1];
                                      const link = linkMatch[1];
                                      
                                      // Clean up HTML entities
                                      title = title.replace(/&#8217;/g, "'")
                                                  .replace(/&#038;/g, "&")
                                                  .replace(/&quot;/g, '"')
                                                  .replace(/&amp;/g, "&");
                                      
                                      posts.push(`- [${title}](${link})`);
                                      console.log(`  ${i + 1}. ${title}`);
                                  }
                              }
                              
                              if (posts.length === 0) {
                                  console.log('Could not parse any blog posts');
                                  resolve(false);
                                  return;
                              }
                              
                              console.log(`Successfully parsed ${posts.length} posts`);
                              
                              // Update README
                              try {
                                  const readme = fs.readFileSync('README.md', 'utf8');
                                  
                                  const startMarker = '<!-- BLOG-POST-LIST:START -->';
                                  const endMarker = '<!-- BLOG-POST-LIST:END -->';
                                  
                                  if (!readme.includes(startMarker) || !readme.includes(endMarker)) {
                                      console.log('Blog post markers not found in README');
                                      resolve(false);
                                      return;
                                  }
                                  
                                  const startPos = readme.indexOf(startMarker) + startMarker.length;
                                  const endPos = readme.indexOf(endMarker);
                                  
                                  const newReadme = readme.substring(0, startPos) + 
                                                  '\n' + posts.join('\n') + '\n' + 
                                                  readme.substring(endPos);
                                  
                                  fs.writeFileSync('README.md', newReadme);
                                  console.log('README updated successfully');
                                  resolve(true);
                                  
                              } catch (err) {
                                  console.log(`Error updating README: ${err.message}`);
                                  resolve(false);
                              }
                              
                          } catch (err) {
                              console.log(`Error parsing RSS: ${err.message}`);
                              resolve(false);
                          }
                      });
                      
                  }).on('error', (err) => {
                      console.log(`Error fetching RSS: ${err.message}`);
                      resolve(false);
                  });
              });
          }
          
          // Run the update
          fetchRSSAndUpdateReadme().then(success => {
              console.log(success ? 'Blog posts updated successfully!' : 'Failed to update blog posts');
              process.exit(success ? 0 : 1);
          });
          EOF
          
          node update_blog.js
          
      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update blog posts in README"
            git push
          fi